
<launch>
	<!-- <arg name = "args11" default= "-0.04736501 1.17632553" /> -->

	<!-- arguments used for the custom calibration. NOTE THIS CALIBRATION GAVE WORST RESULTS ON TEST SETUP -->
	<param name="arg1" value="-0.04736501, 1.17632553" />
  
	<!-- By default, we do not start a database (it can be large) -->
	<arg name="db" default="false" />
  
	<!-- Allow user to specify database location -->
	<arg name="db_path" default="$(find marco_config)/default_warehouse_mongo_db" />
	<!--
	By default, hide joint_state_publisher's GUI

	MoveIt!'s "demo" mode replaces the real robot driver with the joint_state_publisher.
	The latter one maintains and publishes the current joint configuration of the simulated robot.
	It also provides a GUI to move the simulated robot around "manually".
	This corresponds to moving around the real robot without the use of MoveIt.
	-->
	<param name="use_gui" value="true"/>

	<!-- By default, we are not in debug mode -->
	<arg name="debug" default="false" />

	<!-- start all relevant controllers -->
	<include file="$(find autonomous_pick_place)/launch/start_controllers.launch">
	</include>

<!-- 	<node pkg="autonomous_pick_place" type = "gripper_state_adder" name="gripper_state_adder" output="screen"/> -->

	<!-- node to publish the new tf with angle correction -->
	<!-- <node pkg="autonomous_pick_place" type = "publish_new_tf.py" name="publish_new_tf" output="screen"/> -->


	<!-- node to publish the right camera calibration file-->
	<!-- <node pkg="autonomous_pick_place" type = "publish_camera_info.py" name="publish_camera_info" output="screen"/> -->

	<!-- node to use the custom calibration with linear fitted function, arguments are the a and b from y = a*x+b : WARNING THIS DOES NOT WORK PROPERLY ON PICK AND PLACE SETUP -->
<!-- 	<node pkg="autonomous_pick_place" type="custom_calibration.py" name= "custom_calibration" output="screen"> -->
		<!-- <param name="arg1" value="$(arg args11)" /> -->
		<!-- <param name="arg1" value="-0.04736501 1.17632553" /> -->
	<!-- </node> -->

	<!-- marker detection package -->
	<!-- <include file = "$(find marker_detector)/launch/marker_detector.launch" /> -->

	<!-- launch the move_group node -->
	<include file="$(find marco_config)/launch/move_group.launch">
		<arg name="allow_trajectory_execution" value="true"/>
		<arg name="fake_execution" value="false"/>
		<arg name="info" value="true"/>
	</include>

	<!-- Run Rviz and load the default config to see the state of the move_group node -->
<!-- 	<include file="$(find marco_config)/launch/moveit_rviz.launch">
	<arg name="config" value="true"/>
	<arg name="debug" value="$(arg debug)"/>
	</include> -->

	<!-- If database loading was enabled, start mongodb as well -->
<!-- 	<include file="$(find marco_config)/launch/default_warehouse_db.launch" if="$(arg db)">
	<arg name="moveit_warehouse_database_path" value="$(arg db_path)"/>
	</include>
 -->

</launch>